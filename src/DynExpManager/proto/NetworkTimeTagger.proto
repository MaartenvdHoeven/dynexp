// This file is part of DynExp.

syntax = "proto3";

import public "Common.proto";
import public "NetworkDataStreamInstrument.proto";

package DynExpProto.NetworkTimeTagger;

enum StreamModeType
{
	Counts = 0;
	Events = 1;
}

message HardwareInfoMessage
{
	double MinInputThresholdInVolts = 1;
	double MaxInputThresholdInVolts = 2;
	double TimingResolutionInPicoSeconds = 3;
}

message BufferInfoMessage
{
	uint64 BufferSizeInSamples = 1;
}

message StreamModeMessage
{
	StreamModeType StreamMode = 1;
}

message ConfigureInputMessage
{
	bool UseRisingEdge = 1;
	double ThresholdInVolts = 2;
}

message ExposureTimeMessage
{
	double ExposureTimeInPicoSeconds = 1;
}

message CoincidenceWindowMessage
{
	double CoincidenceWindowInPicoSeconds = 1;
}

message InputDelayMessage
{
	double DelayInPicoSeconds = 1;
}

message HBTActiveMessage
{
	bool Enable = 1;
}

message ConfigureHBTMessage
{
	double BinWidthInPicoSeconds = 1;
	uint64 BinCount = 2;
}

message HBTResultsMessage
{
	bool Enabled = 1;
	uint64 EventCounts = 2;
	uint64 IntegrationTimeInMicroSeconds = 3;
	repeated DynExpProto.NetworkDataStreamInstrument.BasicSampleMessage Results = 4;
}

service NetworkTimeTagger
{
	rpc GetHardwareInfo (DynExpProto.Common.VoidMessage) returns (HardwareInfoMessage) {}
	rpc GetBufferInfo (DynExpProto.Common.VoidMessage) returns (BufferInfoMessage) {}
	rpc GetStreamMode (DynExpProto.Common.VoidMessage) returns (StreamModeMessage) {}
	rpc SetStreamMode (StreamModeMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc ClearBuffer (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc ConfigureInput (ConfigureInputMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc SetExposureTime (ExposureTimeMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc SetCoincidenceWindow (CoincidenceWindowMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc SetInputDelay (InputDelayMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc SetHBTActive (HBTActiveMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc ConfigureHBT (ConfigureHBTMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc ResetHBT (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc GetHBTResults (DynExpProto.Common.VoidMessage) returns (HBTResultsMessage) {}
}