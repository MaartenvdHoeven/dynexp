// This file is part of DynExp.

syntax = "proto3";

import public "Common.proto";

package DynExpProto.NetworkDataStreamInstrument;

message StreamSizeMessage
{
	optional uint64 StreamSizeRead = 1;
	uint64 StreamSizeWrite = 2;
}

message StreamInfoMessage
{
	DynExpProto.Common.UnitType ValueUnit = 1;
	double HardwareMinValue = 2;
	double HardwareMaxValue = 3;
	bool IsBasicSampleTimeUsed = 4;
	StreamSizeMessage StreamSizeMsg = 5;
}

message BasicSampleMessage
{
	double Value = 1;
	double Time = 2;
}

message WriteMessage
{
	repeated BasicSampleMessage Samples = 1;
}

message WriteResultMessage
{
	uint64 LastSampleID = 1;
}

message ReadMessage
{
	uint64 StartSampleID = 1;
}

message ReadResultMessage
{
	repeated BasicSampleMessage Samples = 1;
	uint64 LastSampleID = 2;
}

service NetworkDataStreamInstrument
{
	rpc GetStreamInfo (DynExpProto.Common.VoidMessage) returns (StreamInfoMessage) {}
	rpc Read (ReadMessage) returns (ReadResultMessage) {}
	rpc Write (WriteMessage) returns (WriteResultMessage) {}
	rpc ClearData (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc Start (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc Stop (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc Restart (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.VoidMessage) {}
	rpc GetStreamSize (DynExpProto.Common.VoidMessage) returns (StreamSizeMessage) {}
	rpc SetStreamSize (StreamSizeMessage) returns (StreamSizeMessage) {}
	rpc ResetStreamSize (DynExpProto.Common.VoidMessage) returns (StreamSizeMessage) {}
	rpc HasFinished (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.OptionalBoolMessage) {}
	rpc IsRunning (DynExpProto.Common.VoidMessage) returns (DynExpProto.Common.OptionalBoolMessage) {}
}